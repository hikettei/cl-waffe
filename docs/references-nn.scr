@begin(section)
@title(cl-waffe.nn)

@begin(section)
@title(Exported)
@begin(deflist)
@def(Neural Networks)
@begin(term)
@link[uri="./neural-networks.html#linearlayer"](LinearLayer)


@link[uri="./neural-networks.html#denselayer"](DenseLayer)


@link[uri="./neural-networks.html#embedding"](Embedding)


@link[uri="./neural-networks.html#rnn"](RNN)


@link[uri="./neural-networks.html#lstm"](LSTM)


@link[uri="./neural-networks.html#gru"](GRU)


@link[uri="./neural-networks.html#transformer"](Transformer)


@link[uri="./neural-networks.html#transformerencoderlayer"](TransformerEncoderLayer)


@link[uri="./neural-networks.html#transformerdecoderlayer"](TransformerDecoderLayer)


@link[uri="./neural-networks.html#conv1d"](Conv1d)


@link[uri="./neural-networks.html#conv2d"](Conv2d)


@link[uri="./neural-networks.html#maxpooling"](MaxPooling)


@link[uri="./neural-networks.html#avgpooling"](AvgPooling) 
@end(term)

@def(Loss/Criterion Functions)
@begin(term)
@link[uri="./neural-networks.html#crossentropy"](CrossEntropy)


@link[uri="./neural-networks.html#softmaxcrossentropy"](SoftmaxCrossEntropy)


@link[uri="./neural-networks.html#mse"](mse)


@link[uri="./neural-networks.html#l1norm"](L1Norm)


@link[uri="./neural-networks.html#l2norm"](L2Norm)


@link[uri="./neural-networks.html#binarycrossentropy"](BinaryCrossEntropy)


@link[uri="./neural-networks.html#kldivloss"](KLDivLoss)


@link[uri="./neural-networks.html#cosinesimirality"](CosineSimirality)
@end(term)

@def(Aggregations)
@begin(term)
@link[uri="./neural-networks.html#dropout"](Dropout)


@link[uri="./neural-networks.html#batchnorm2d"](BatchNorm2d)


@link[uri="./neural-networks.html#layernorm"](LayerNorm)
@end(term)

@def(Functions)
@begin(term)
@link[uri="./neural-networks.html#linear"](linear) 
@end(term)

@def(Utils)
@begin(term)
@link[uri="./neural-networks.html#model-list"](Model-List) 
@end(term)

@end(deflist)
@end(section)

@end(section)